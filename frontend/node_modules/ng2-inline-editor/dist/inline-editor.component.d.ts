import { OnInit, EventEmitter, ComponentFactoryResolver } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { InputType } from "./input-config";
import { InputTextComponent } from "./inputs/input-text.component";
export declare const InputComponets: typeof InputTextComponent[];
export declare class InlineEditorComponent implements OnInit, ControlValueAccessor {
    componentFactoryResolver: ComponentFactoryResolver;
    private components;
    private getComponentType(typeName);
    type: InputType;
    onSave: EventEmitter<any>;
    onEdit: EventEmitter<any>;
    onCancel: EventEmitter<any>;
    empty: string;
    disabled: boolean;
    required: boolean;
    placeholder: string;
    name: string;
    size: number;
    min: number;
    max: number;
    pattern: string;
    fnErrorLength: any;
    fnErrorPattern: any;
    cols: number;
    rows: number;
    options: any;
    onChange: Function;
    onTouched: Function;
    private _value;
    private preValue;
    private editing;
    isEmpty: boolean;
    private _options;
    value: any;
    constructor(componentFactoryResolver: ComponentFactoryResolver);
    private componentRef;
    private container;
    private inputInstance;
    ngOnInit(): void;
    private generateComponent(type);
    private createInputInstance(componentType);
    initializeProperties(): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    edit(value: any): void;
    onSubmit(value: any): void;
    cancel(value: any): void;
    private initProperty(property);
    showText(): any;
}
