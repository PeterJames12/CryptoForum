[{"__symbolic":"module","version":3,"metadata":{"InputSelectComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"./input-base","name":"InputBase"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"inline-editor-select","styles":["a {\n    text-decoration: none;\n    color: #428bca;\n    border-bottom: dashed 1px #428bca;\n    cursor: pointer;\n    line-height: 2;\n    margin-right: 5px;\n    margin-left: 5px;\n}\n\n\n/* editable-empty */\n\n.editable-empty,\n.editable-empty:hover,\n.editable-empty:focus,\na.editable-empty,\na.editable-empty:hover,\na.editable-empty:focus {\n    font-style: italic;\n    color: #DD1144;\n    text-decoration: none;\n}\n\n.inlineEditForm {\n    display: inline-block;\n    white-space: nowrap;\n    margin: 0;\n}\n\n#inlineEditWrapper {\n    display: inline-block;\n}\n\n.inlineEditForm input,\nselect {\n    width: auto;\n    display: inline;\n}\n\n.editInvalid {\n    color: #a94442;\n    margin-bottom: 0;\n}\n\n.error {\n    border-color: #a94442;\n}\n\n[hidden] {\n    display: none;\n}"],"template":"<select #inputRef class=\"form-control\" [(ngModel)]=\"context.value\">\n                <template ngFor let-item [ngForOf]=\"context.options.data\">\n                    <optgroup *ngIf=\"item.children\" [label]=\"item[context.options.text]\">\n                        <option *ngFor=\"let child of item.children\" [value]=\"child[context.options.value]\">\n                            {{child[context.options.text]}}\n                        </option>\n                    </optgroup>\n                    <option *ngIf=\"!item.children\" [value]=\"item[context.options.value]\">{{item[context.options.text]}}</option>\n                </template>\n                </select>"}]}],"members":{"inputRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["inputRef"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Renderer"}]}],"getPlaceholder":[{"__symbolic":"method"}],"optionSelected":[{"__symbolic":"method"}],"getElementText":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"InputSelectComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"./input-base","name":"InputBase"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"inline-editor-select","styles":["a {\n    text-decoration: none;\n    color: #428bca;\n    border-bottom: dashed 1px #428bca;\n    cursor: pointer;\n    line-height: 2;\n    margin-right: 5px;\n    margin-left: 5px;\n}\n\n\n/* editable-empty */\n\n.editable-empty,\n.editable-empty:hover,\n.editable-empty:focus,\na.editable-empty,\na.editable-empty:hover,\na.editable-empty:focus {\n    font-style: italic;\n    color: #DD1144;\n    text-decoration: none;\n}\n\n.inlineEditForm {\n    display: inline-block;\n    white-space: nowrap;\n    margin: 0;\n}\n\n#inlineEditWrapper {\n    display: inline-block;\n}\n\n.inlineEditForm input,\nselect {\n    width: auto;\n    display: inline;\n}\n\n.editInvalid {\n    color: #a94442;\n    margin-bottom: 0;\n}\n\n.error {\n    border-color: #a94442;\n}\n\n[hidden] {\n    display: none;\n}"],"template":"<select #inputRef class=\"form-control\" [(ngModel)]=\"context.value\">\n                <template ngFor let-item [ngForOf]=\"context.options.data\">\n                    <optgroup *ngIf=\"item.children\" [label]=\"item[context.options.text]\">\n                        <option *ngFor=\"let child of item.children\" [value]=\"child[context.options.value]\">\n                            {{child[context.options.text]}}\n                        </option>\n                    </optgroup>\n                    <option *ngIf=\"!item.children\" [value]=\"item[context.options.value]\">{{item[context.options.text]}}</option>\n                </template>\n                </select>"}]}],"members":{"inputRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["inputRef"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Renderer"}]}],"getPlaceholder":[{"__symbolic":"method"}],"optionSelected":[{"__symbolic":"method"}],"getElementText":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}]}}}}]